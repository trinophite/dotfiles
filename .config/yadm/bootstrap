#!/bin/bash

os_type=$(uname -s)

PREFIX="${HOME}/.local"
mkdir -p "${PREFIX}/bin"
GO_VERSION=1.22.0

download() {
	local url="$1"
	local destination="$2"

	if command -v curl >/dev/null; then
		echo "Downloading $url using curl..."
		curl -fsSL -o "$destination" "$url"
	elif command -v wget >/dev/null; then
		echo "Downloading $url using wget..."
		wget -O "$destination" "$url"
	else
		echo "Error: Neither curl nor wget is available for downloading."
		return 1
	fi
}

if [ "$os_type" = "Linux" ]; then
	echo Linux
	# install neovim
	appimage_url="https://github.com/neovim/neovim/releases/latest/download/nvim.appimage"
	download "$appimage_url" /tmp/nvim.appimage
	chmod +x /tmp/nvim.appimage
	mv /tmp/nvim.appimage "${PREFIX}/bin/nvim"

	# miniforge
	latest_miniforge_url="https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-x86_64.sh"

fi

if [ "$os_type" = "Darwin" ]; then
	echo Darwin
	# Assume Homebrew has been already installed
	brew bundle

	# miniforge
	latest_miniforge_url="https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-MacOSX-arm64.sh"
fi

# install miniforge
download "${latest_miniforge_url}" /tmp/miniforge3.sh
bash /tmp/miniforge3.sh -bp "${PREFIX}/miniforge3"
rm /tmp/miniforge3.sh

# install rustup
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s - -y

if [ "$os_type" = "Linux" ]; then
	curl -sS https://starship.rs/install.sh | sh -s - -y -b "${PREFIX}/bin"

	# "${HOME}/.cargo/bin/cargo" install tealdeer eza bandwhich git-delta bat bottom

	# install fzf
	git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
	~/.fzf/install --all

	# install golang
	download "https://go.dev/dl/go${GO_VERSION}.linux-amd64.tar.gz" /tmp/go.tar.gz
	sudo mkdir -p "/usr/local/go/${GO_VERSION}"
	sudo tar xvf /tmp/go.tar.gz -C "/usr/local/go/${GO_VERSION}"
	sudo ln -sf "../go/${GO_VERSION}/go/bin/go" /usr/local/bin/go
	rm /tmp/go.tar.gz

	# install jq
	download https://github.com/jqlang/jq/releases/latest/download/jq-linux-amd64 "${PREFIX}/bin/jq"

	# install rye
	curl -sSf https://rye-up.com/get | RYE_INSTALL_OPTION="--yes" bash
fi

# install node
curl -sSL install-node.vercel.app/lts | PREFIX="${HOME}/.local" bash -s - -y

# install astronvim
mv ~/.config/nvim ~/.config/nvim.bak
mv ~/.local/share/nvim ~/.local/share/nvim.bak
mv ~/.local/state/nvim ~/.local/state/nvim.bak
mv ~/.cache/nvim ~/.cache/nvim.bak

git clone https://github.com/trinophite/astronvim ~/.config/nvim

# install omz
sh -c "$(curl -fsSL https://install.ohmyz.sh/)" "" --unattended --keep-zshrc
ZSH="${HOME}/.oh-my-zsh"
git clone https://github.com/zdharma-continuum/fast-syntax-highlighting $ZSH/custom/plugins/fast-syntax-highlighting
git clone https://github.com/zsh-users/zsh-autosuggestions $ZSH/custom/plugins/zsh-autosuggestions
